# LiDAR Interference Variables Reference Guide

## Variables in `sensor_callbacks.py`

### In `front_lidar_callback` method:

`base_interference`: Default 0.05. Base percentage of interference applied. Increasing this results in more phantom points across all frames.

`time_factor` amplitude: Default 0.03. Controls the amplitude of time-varying oscillation. Increasing this creates more pronounced peaks and valleys in interference over time.

### In `simulate_lidar_interference` method:

`base_rate`: Default 0.05. Percentage of points from the other sensor considered as candidates. Increasing this creates a larger pool of potential phantom points.

`probability_factor`: Default 0.1. Fraction of candidate points that become phantom points. Increasing this means a higher percentage of candidates become phantom points.

`burst_chance`: Default 0.05. Probability of a sudden "burst" of increased interference. Increasing this makes interference bursts occur more frequently.

`burst_multiplier`: Default 3.0. Multiplier for phantom points during a burst. Increasing this results in more intense interference bursts.

`distortion_scale` base: Default 0.2. Minimum distortion applied to phantom points. Increasing this adds more baseline distortion for all phantom points.

`distortion_scale` range: Default 0.6. Additional distortion applied based on distance. Increasing this creates greater variation in distortion based on distance.

Cluster chance: Default 0.3. Probability of grouping phantom points into clusters. Increasing this results in more frequent clustering of phantom points.

Blend factor range: Default 0.3-0.7. How closely phantom points cluster around anchors. Increasing this creates tighter clustering of phantom points.

## Variables in `config/simulation_config.py`

`simulate_interference`: Default True. Master switch to enable/disable all interference. Boolean toggle.

`direct_interference_probability`: Default 0.005. Controls probability of direct interference. Increasing this creates more direct interference between sensors.

`scattered_interference_probability`: Default 0.001. Controls probability of scattered interference. Increasing this creates more scattered interference from the environment.

`phantom_point_max_distance`: Default 20.0. Maximum distance for phantom points to appear. Increasing this allows phantom points to appear further from the vehicle.

`interference_max_range_error`: Default 15.0. Maximum range measurement error due to interference. Increasing this creates greater distance errors in phantom points.

## Recommended Adjustments

### For Low Interference:
- `base_rate`: 0.01
- `probability_factor`: 0.05
- `burst_chance`: 0.02
- `burst_multiplier`: 2.0
- `direct_interference_probability`: 0.001
- `scattered_interference_probability`: 0.0005

### For Medium Interference:
- `base_rate`: 0.05
- `probability_factor`: 0.1
- `burst_chance`: 0.05
- `burst_multiplier`: 3.0
- `direct_interference_probability`: 0.005
- `scattered_interference_probability`: 0.001

### For High Interference:
- `base_rate`: 0.1
- `probability_factor`: 0.2
- `burst_chance`: 0.1
- `burst_multiplier`: 4.0
- `direct_interference_probability`: 0.01
- `scattered_interference_probability`: 0.002

## Impact on False Object Detection

The variables most likely to trigger false object detections are:

1. **`base_rate` and `probability_factor`**: These directly control the quantity of phantom points
2. **Cluster chance and blend factor**: The clustering of phantom points can create point groups that resemble real objects
3. **`burst_multiplier`**: High values can create sudden dense clusters that might be mistaken for objects
4. **`distortion_scale`**: Controls how much phantom points deviate from real data points

When adjusting these values, monitor the impact on:
- Number of false positive object detections
- Frequency of autonomous braking events
- Intensity of braking applied in false positive scenarios